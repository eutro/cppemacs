name: Tests

on:
  push:
    branches: [ main, ci ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        emacs_version:
          - 26.2 # first version to include module-env.h in installation
          - 27.2
          - 28.2 # latest major with new features
        os:
          - ubuntu-latest
          - macos-13 # latest x86_64
          - windows-latest

    runs-on: ${{matrix.os}}
    env:
      SCRIPT_SUFFIX: ${{ matrix.os == 'windows-latest' && '.ps1' || '' }}
      EMACS_VERSION: ${{matrix.emacs_version}}
      EMACS_CONFIGURE_FLAGS: >-
        --disable-build-details --with-modules --with-x=no
        --with-ns=no --with-xpm=no --with-jpeg=no --with-png=no
        --with-gif=no --with-tiff=no
      EMACS_MAKEFLAGS: FAST=true -j4
      EMACS_PREFIX: .cache/emacs
      EMACS_CONFIGURE_COUNTER: 0 # change to invalidate the configure flags

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Emacs Dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get install gnutls-dev

    - name: Cache Emacs
      id: cache-emacs
      uses: actions/cache/restore@v4
      if: ${{ matrix.os != 'windows-latest' }}
      with:
        path: ${{env.EMACS_PREFIX}}
        key: ${{matrix.os}}-emacs-${{env.EMACS_VERSION}}-c${{env.EMACS_CONFIGURE_COUNTER}}
    - name: Install Emacs
      run: ${{github.workspace}}/.github/scripts/install-emacs${{env.SCRIPT_SUFFIX}}
    - name: Save Emacs Cache
      uses: actions/cache/save@v4
      if: ${{ matrix.os != 'windows-latest' && steps.cache-emacs.outputs.cache-hit != 'true' }}
      with:
        path: ${{env.EMACS_PREFIX}}
        key: ${{ steps.cache-emacs.outputs.cache-primary-key }}

    - name: Configure CMake
      run: >-
        cmake -B "${{github.workspace}}/build"
        -DCPPEMACS_Documentation=OFF -DCPPEMACS_Examples=ON -DCPPEMACS_Test=ON

    - name: Build
      run: cmake --build "${{github.workspace}}/build" -j 4

    - name: Test
      run: ctest --test-dir "${{github.workspace}}/build" -C debug --output-on-failure

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
